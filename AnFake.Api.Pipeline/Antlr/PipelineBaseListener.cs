//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Pipeline.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace AnFake.Api.Pipeline.Antlr {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPipelineListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
//[System.CLSCompliant(false)]
public partial class PipelineBaseListener : IPipelineListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.pipeline"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPipeline([NotNull] PipelineParser.PipelineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.pipeline"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPipeline([NotNull] PipelineParser.PipelineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.InternalUnaryStep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInternalUnaryStep([NotNull] PipelineParser.InternalUnaryStepContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.InternalUnaryStep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInternalUnaryStep([NotNull] PipelineParser.InternalUnaryStepContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.InternalSequentialStep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInternalSequentialStep([NotNull] PipelineParser.InternalSequentialStepContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.InternalSequentialStep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInternalSequentialStep([NotNull] PipelineParser.InternalSequentialStepContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.InternalParallelStep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInternalParallelStep([NotNull] PipelineParser.InternalParallelStepContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.InternalParallelStep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInternalParallelStep([NotNull] PipelineParser.InternalParallelStepContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.unaryStep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryStep([NotNull] PipelineParser.UnaryStepContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.unaryStep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryStep([NotNull] PipelineParser.UnaryStepContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.optionalBuildRun"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionalBuildRun([NotNull] PipelineParser.OptionalBuildRunContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.optionalBuildRun"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionalBuildRun([NotNull] PipelineParser.OptionalBuildRunContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.InternalBuildRunVoid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInternalBuildRunVoid([NotNull] PipelineParser.InternalBuildRunVoidContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.InternalBuildRunVoid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInternalBuildRunVoid([NotNull] PipelineParser.InternalBuildRunVoidContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.InternalBuildRunIn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInternalBuildRunIn([NotNull] PipelineParser.InternalBuildRunInContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.InternalBuildRunIn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInternalBuildRunIn([NotNull] PipelineParser.InternalBuildRunInContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.InternalBuildRunOut"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInternalBuildRunOut([NotNull] PipelineParser.InternalBuildRunOutContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.InternalBuildRunOut"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInternalBuildRunOut([NotNull] PipelineParser.InternalBuildRunOutContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.InternalBuildRunInOut"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInternalBuildRunInOut([NotNull] PipelineParser.InternalBuildRunInOutContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.InternalBuildRunInOut"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInternalBuildRunInOut([NotNull] PipelineParser.InternalBuildRunInOutContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PipelineParser.buildRunName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBuildRunName([NotNull] PipelineParser.BuildRunNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PipelineParser.buildRunName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBuildRunName([NotNull] PipelineParser.BuildRunNameContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace AnFake.Api.Pipeline.Antlr
